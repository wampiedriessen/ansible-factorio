---
# tasks file for ansible-factorio
- name: Factorio | Create 'factorio' user
  user: 
    name: "{{ factorio_user }}"
    create_home: no

- name: Factorio | Download Factorio Headless
  get_url:
    src: "https://factorio.com/get-download/{{ factorio_version }}/headless/linux64"
    dest: /tmp/factorio-headless
    check: "{{ factorio_checksum }}"

- name: Factorio | Unpack Factorio
  unarchive:
    src: /tmp/factorio-headless
    dest: /opt/
    creates: "{{ factorio_directory }}"
    remote_src: yes
    owner: "{{ factorio_user }}"
    group: "{{ factorio_user }}"

- name: Factorio | Update owner of factorio directory
  file:
    path: "{{ factorio_directory }}"
    owner: "{{ factorio_user }}"
    group: "{{ factorio_user }}"
    state: directory
    mode: '0755'

- name: Factorio | Upload systemd service file
  template:
    src: factorio.service.j2
    dest: "{{ factorio_directory }}/factorio.service"

- name: Factorio | Install systemd service file
  file:
    src: "{{ factorio_directory }}/factorio.service"
    dest: "/etc/systemd/system/factorio.service"
    state: link

- name: Factorio | Create Saves folder
  file:
    path: "{{ factorio_directory }}/saves"
    owner: "{{ factorio_user }}"
    group: "{{ factorio_user }}"
    state: directory
    mode: '0755'

- name: Factorio | Upload save file
  copy:
    dest: "{{ factorio_save_file }}"
    src: "../../saves/ansible.zip"
    owner: "{{ factorio_user }}"
    group: "{{ factorio_user }}"
  when: factorio_save_file is defined

- name: Factorio | Create a save file
  # ToDo: add map-gen-settings variables
  command: "{{ factorio_directory }}/bin/x64/factorio --create {{ factorio_directory }}/saves/ansible.zip"
  creates: "{{ factorio_directory }}/saves/ansible.zip"
  when: factorio_save_file is undefined

- name: Factorio | Start Factorio server
  systemd:
    name: "{{ factorio_systemd_service }}"
    enabled: yes
    state: started
    daemon_reload: yes
